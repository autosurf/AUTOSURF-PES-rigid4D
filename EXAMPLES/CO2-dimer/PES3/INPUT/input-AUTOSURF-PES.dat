*****    This is an input file for "AUTOSURF-PES" PROGRAM    *****

# GENERAL INFORMATION:
----------------------
CO2dimer        ! System LABEL. Maximum 15 char. It must be at least one empty space after the LABEL
1               ! [restart] 1=yes, 0=no 
0               ! [xseed] seed for the random number generator algorithm. Use "0" for a Sobol sequence.

# FRAGMENTS INFORMATION:
------------------------
1               ! [exch] are the two fragments identical? 1=yes, 0=no
1               ! [flip1] is frag. 1 symmetric upon 180 degree flip (e.g. CO2)? 1=yes, 0=no
1               ! [flip2] is frag. 2 symmetric upon 180 degree flip? 1=yes, 0=no
3               ! [natom1] number of atoms in fragment 1
3               ! [natom2] number of atoms in fragment 2 
O1              ! element label for atom 1, e.g. 'H1'
C1              ! element label for atom 2, e.g. 'H2'
O2              ! element label for atom 3
O3              ! ...
C2              ! 
O4              ! 
15.9949146221d0 ! mass of atom 1 (atomic units)
12d0            ! mass of atom 2
15.9949146221d0 ! ...
15.9949146221d0 !
12d0            ! 
15.9949146221d0 ! 
0d0             ! atom 1, Cartesian coordinates (fragment 1, atoms placed along z-axis) (Angstroms)
0d0             ! ...
0d0             ! 
0d0             ! atom 2, Cartesian coordinates
0d0             ! ...
1.162086d0      ! 
0d0             ! atom 3, Cartesian coordinates
0d0             ! ...
2.324172d0      ! 
0d0             ! atom 4, Cartesian coordinates (fragment 2, atoms placed along z-axis)
0d0             ! ...
0d0             ! 
0d0             ! atom 5, Cartesian coordinates
0d0             ! ...
1.162086d0      ! 
0d0             ! atom 6, Cartesian coordinates
0d0             ! ...
2.324172d0      ! 

# CODE CONTROL:
---------------
1.0d-4          ! [acc](kcal/mol) accuracy target -> ( 1d-3 kcal/mol = 0.35 cm-1 = 0.043 meV )
1000            ! [nloop] max. number of iterations
6d0             ! [E_range](kcal/mol) energy range of interest (above asymptote)
1               ! [focus] 0=no, 1=yes; if "focus=0", all energy range is considered
0.0d0           ! [increment](kcal/mol) considered energies = asymptotic energy - "increment"; if "focus=1"
3d0             ! [rmin(1)](Angstroms) minimum value of R (distance between centers of mass)
15d0            ! [rmax(1)](Angstroms) maximum value of R
1               ! [focus_onR] 0=no, 1=yes; if "focus_onR=0", all R-range is considered
9.0d0           ! [minR](Angstroms) minimum R considered; if "focus_onR=1" (after low- and seed-grid are computed)
13.0d0          ! [maxR](Angstroms) maximum R considered; if "focus_onR=1" (after low- and seed-grid are computed)
0               ! [focus_onLR] 0=no, 1=yes; if "focus_onLR=1", only long-range is considered
9.0d0           ! [xminLR](Angstroms) minimum R considered; if "focus_onLR=1" (after low- and seed-grid are computed)
600             ! [numpoints] number of high-level points in the seed-grid 
1               ! [ab_flag] 1= single point energies; 2= also gradients. *** SHOULDN'T BE CHANGED IN A RESTART!
4               ! [code_flag] 1=Gaussian, 2=Molpro, 3=Aces II, 4=molpro*
1.0             ! [numadded] number of points added per cycle = "numadded" * number of processors used
6               ! [order_1] maximum power of R=exp(alpha*r)
6               ! [order_2] maximum value of L1 in angular basis
6               ! [order_3] maximum value of L2 in angular basis
6               ! [order_4] maximum value of L=L1+L2 in angular basis
120000          ! [num_err_points] # of points to randomly estimate errors at the beginning of each loop
0               ! [low_grid] compute a low-level-grid? 0=no, 1=yes; 2=compute only the low-level-grid
